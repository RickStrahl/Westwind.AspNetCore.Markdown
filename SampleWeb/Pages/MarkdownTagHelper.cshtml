@page
@model MarkdownControlModel
@using Westwind.AspNetCore.Markdown
@{
    ViewBag.Title = "Markdown TagHelper";
}
@section Headers {
    <style>
        .header {
            margin-top: 50px;
            padding-bottom: 10px;
            border-bottom: 1px solid #eee;
        }

        .sample-block {
            margin-left: 25px;
            margin-top: 10px;
            padding: 15px 15px 15px 15px;
            background: #f2f2f2;
            border-radius: 6px;
        }
        /* vs2015 theme specific*/
        pre {
            background: #1E1E1E;
            color: #eee;
            padding: 0.7em !important;
            overflow-x: auto;
            white-space: pre;
            word-break: normal;
            word-wrap: normal;
        }

            pre > code {
                white-space: pre;
            }
    </style>
}

<h1>Markdown 'Islands' with the &lt;markdown&gt; TagHelper</h1>


<h3 class="header">Markdown TagHelper Static Text Block</h3>

<p>
    This example embeds a static Markdown block into the current Razor page.
<br/>
<small><b>Note:</b> The <b>slow load time</b> of this page is due to URL loading of the last sample. To improve performance remove the URL loading example.</small>
</p>

<hr />



<div class="sample-block ">
    <markdown normalize-whitespace="true" sanitize-html="true">
        #### This is Markdown text inside of a Markdown block

        * Item 1
        * Item 2

        The current Time is: **@DateTime.Now.ToString("HH:mm:ss")**

        ![](https://markdownmonster.west-wind.com/Images/MarkdownMonster_Icon_32.png)
        This is a link to
        [Markdown Monster](https://markdownmonster.west-wind.com).

        This is an auto link:

        https://markdownmonster.west-wind.com


        ```cs
        // this c# is a code block
        for (int i = 0; i < lines.Length; i++)
        {
        line1 = lines[i];
        if (!string.IsNullOrEmpty(line1))
        break;
        }
        ```

     

        > If you didn't see an alert box when the page loaded the
        > `
        <script>
            ` tag was scrubbed.

                                        <script>
                                           alert("GOTHCHA! Injected code executed.")
        </script>

        <a href="javascript:alert('Gotcha! JavaScript: fired');">XSS Link</a>

        <div class="alert alert-info" onclick="alert('Gotcha! onclick handler fired');">
            XSS Alert: You shouldn't be able to click me and execute the onclick handler.
        </div>


    </markdown>
</div>

<h3 class="header">Markdown Parsing in code with Markdown.Parse()</h3>
<div class="sample-block">
    <markdown>
        ##### Parse Html in Code:
        The following is a short snippet of C# code:

        ```cs
        var html = Markdown.Parse("This is **Markdown** Text.")
        ```

        Using fenced code blocks and <a href="https://highlightjs.com">highlightJs</a>
    </markdown>
</div>



<markdown>
    ### PlantUML Render Extension Rendering{class="header"}
    PlantUML is a image generation markup language that creates embeddable image diagrams. 
    Added with an optional PlantUML `MarkdownRenderExtension` which has to be added in
    the Middleware configuration or via `MarkdownRenderExtensions.Current.RenderExtensions.Add()`.
</markdown>




<div class="sample-block">
    <markdown normalize-whitespace="true">    
    ### PlantUML diagram

    ```plantuml
    @@startuml
    skinparam monochrome true
    left to right direction
    User1 --> (Story1)
    (Story1) --> (Story2)
    (Story2) --> (Story3)
    @@enduml
    ```
    </markdown>
</div>


<h3 class="header">Markdown Render Extension: FontAwesome</h3>
<div class="sample-block">
    <markdown>
        <!-- Note limited options for the free version of FontAwesome 
             but you can specify, -regular, -duotone, etc. -->
        #### @@icon-home Home
        #### @@icon-solid-cloud-arrow-up-color:steelblue Beam me up!
        #### @@icon-solid-rotate-right-spin-color:goldenrod Spin me up!

    </markdown>

</div>


<h3 class="header">Markdown Model Binding</h3>

This example data binds the Model.MarkdownText property to the TagHelper's <code>markdown</code> proper

<div class="sample-block">
    <markdown normalize-whitespace="true" markdown="MarkdownText" />
</div>



<h3 class="header">Markdown TagHelper with File Loaded Markdown</h3>
<p>
    This example uses <code>&lt;markdown Filename="~/MarkdownPartialPage.md">&lt;/markdown></code> to render
    Markdown from a file into the current page.
</p>

<div class="sample-block">
    <markdown Filename="~/MarkdownPartialPage.md"></markdown>
</div>


<h3 class="header">Markdown TagHelper with Url Loaded from a GitHub Readme</h3>
<p>
    This example uses:
    <pre><code>&lt;markdown Url="https://github.com/RickStrahl/Westwind.AspNetCore/tree/master/Westwind.AspNetCore.Markdown">&lt;/markdown></code></pre>
    to render this library's documentation from a Markdown URL on Github.
</p>

<div class="sample-block">
    <markdown
        url="https://github.com/RickStrahl/Westwind.AspNetCore.Markdown/raw/master/readme.md"
        url-fixup-baseurl="true">
    </markdown>
</div>





@section Scripts {
    <!-- HighlightJS added to provide syntax coloring for source code snippets in Markdown -->
    <script src="~/lib/highlightjs/highlight.pack.js"></script>
    <link href="~/lib/highlightjs/styles/vs2015.css" rel="stylesheet" />
    <script>        
        var pres = document.querySelectorAll("pre>code");
        for (var i = 0; i < pres.length; i++) {
            hljs.highlightBlock(pres[i]);
        }
        
    </script>
}